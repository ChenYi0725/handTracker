from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# 假設你有一個自己的資料集，每筆資料有4個維度
# 這裡我們使用一個簡單的假設資料集作為範例
your_data = [
    [0.0, 0.006877629026778345, 2.0194471836354038, -0.005983645272285396, 4.983231319011485e-06],
    [0.0, 0.023788575648640575, 6.660652896150525, -0.021154007352369525, 1.8894387463448105e-05],
    [0.0, -7879.002264147243, 23.150714562876416, -0.02980471214495222, 1.4128253257079248e-05],
    [0.0, -231320.12544444896, 746.1101894842295, -1.069491300826827, 0.0005748429228436692],
    [0.0, 0.006877629026778345, 2.0194471836354038, -0.005983645272285396, 4.983231319011485e-06],
    [0.0, -1775337.8705776867, 6063.552355825591, -9.203800146731025, 0.005238597559658635],
    [0.0, -17408.65542490929, 56.824184621768275, -0.08238343382346143, 4.4760377135266394e-05],
    [0.0, 0.08478790258249885, 18.29180267168738, -0.07516673810858128, 8.686554349704854e-05],
    [0.0, 0.09310946629049242, 23.343955945199685, -0.08277015644485561, 8.253696940953398e-05],
    [0.0, -0.2681292110828442, -62.57960820243352, 0.2388746822215955, -0.0002564417869697322],
    [0.0, -0.2529434589387553, -71.23970208975891, 0.22541294594005643, -0.00020058963552391348],
    [0.0, -0.10847538759998414, -26.611104740817584, 0.09644209235938082, -9.83014707923243e-05],
    [0.0, 0.035467293109116546, 11.641559254195919, -0.03149077474645914, 2.3956436629155465e-05],  
    [0.0, 0.11647410348302041, 31.37522077848259, -0.10331558245952739, 9.568180761292773e-05],
    [0.0, 105124.9040686279, -428.04619728335246, 0.7746177290052083, -0.0005256661645513241],
    [0.0, -120927.29343031827, 468.5160061291937, -0.8065641305476526, 0.0005205735734424953],
    [0.0, 281282.3979950934, -1116.2472458536386, 1.9681961818282996, -0.001300998608577508],
    [0.0, 318643.4930223194, -1187.5418539282439, 1.9669210212779618, -0.0012216101489193887],
    [0.0, 362269.0065819219, -1319.5006601195287, 2.1359560703984126, -0.001296557826532897],
    [0.0, -85763.738463487, 318.07274837919704, -0.5242453674290884, 0.0003239949416479221],

    [0.0, -651487.1835479921, 2398.6965108424674, -3.92487843583961, 0.0024080857604795633],
    [0.0, 993843.8792956251, -4094.350912739618, 7.495995726409224, -0.0051459520555643895],
    [0.0, -83857.16688977482, 333.5314829558832, -0.5895192074516227, 0.00039069085001949735],
    [0.0, 534400.0460056952, -2284.156290279225, 4.338705273451256, -0.0030901809187275087],
    [0.0, 142649.01998772693, -459.94295337992514, 0.6590495673974637, -0.0003540996291848129],
    [0.0, -270532.32810538495, 933.3858924306167, -1.431181088483333, 0.0008228719386184259],
    [0.0, 512772.70343057544, -1841.244936447262, 2.9381722013899187, -0.0017580707788273726],
    [0.0, 362146.3017296969, -1192.8799077707986, 1.746261290016895, -0.0009585959983175631],
    [0.0, 49807.0364393488, -187.30433485613605, 0.31294665471556327, -0.00019600800357419347],
    [0.0, -264453.88121378754, 906.9577276852297, -1.3822926690164836, 0.0007899543005211088],
    [0.0, -432585.52219433116, 1567.2672397325261, -2.5234333360356462, 0.001523462010371358],
    [0.0, 4416.219131670773, -14.812353889523013, 0.02201195002688382, -1.2224826539628949e-05],
    [0.0, 1702.957390816919, -5.5816591128121456, 0.008070369250966313, -4.338231479953759e-06],
    [0.0, 232813.66484723042, -857.2559087462238, 1.4027607047511503, -0.0008606795495535068],
    [0.0, -170400.3290634825, 611.3752182302986, -0.974824046247816, 0.0005828237327700258],
    [0.0, 221025.42737032165, -777.7660487816376, 1.2161290213777414, -0.0007129304340061781],
    [0.0, -322895.81955215876, 1130.11167922222, -1.7575601149615352, 0.0010248060871344549],
    [0.0, -108000.6123636878, 397.9399806321647, -0.6515995380547873, 0.0004000610885754595],
    [0.0, -0.07453737281289767, -21.473058823165328, 0.0661958244478068, -5.739216341298362e-05],
    [0.0, 275268.7284432731, -939.3413993027771, 1.4245210284804521, -0.0008100419729752198],
]

# 對應的標籤（分類）
your_labels = [
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
               2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
               ]  # 這裡的標籤需要根據你的實際情況調整  "1->left" "2->down"

# 將資料集分為訓練集和測試集
X_train, X_test, y_train, y_test = train_test_split(your_data, your_labels, test_size=0.2, random_state=42)

# 標準化特徵值
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# 創建 KNN 分類器，指定 k 值
knn_classifier = KNeighborsClassifier(n_neighbors=3)

# 在訓練集上擬合模型
knn_classifier.fit(X_train, y_train)

# 使用模型進行預測
y_pred = knn_classifier.predict(X_test)

# 計算準確率
accuracy = accuracy_score(y_test, y_pred)
print(f'accuracy: {accuracy}')